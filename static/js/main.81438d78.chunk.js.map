{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","dleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81438d78.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo</h1>\r\n      <h2>\r\n        {allPosts} записей, из них понравилось {liked}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: '',\r\n    };\r\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n  }\r\n\r\n  onUpdateSearch(e) {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onUpdateSearch(term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Поиск по записям\"\r\n        onChange={this.onUpdateSearch}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttons = [\r\n      { name: 'all', label: 'Все' },\r\n      { name: 'like', label: 'Понравилось' },\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const { filter, onFilterSelect } = this.props;\r\n      const active = filter === name;\r\n      const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n        <button\r\n          onClick={() => onFilterSelect(name)}\r\n          key={name}\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\"btn-group\">{buttons}</div>;\r\n  }\r\n}\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;\r\n","import React, { Component } from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDelete,\r\n      onToggleImportant,\r\n      onToggleLiked,\r\n      important,\r\n      like,\r\n    } = this.props;\r\n\r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n    if (like) {\r\n      classNames += ' like';\r\n    }\r\n    return (\r\n      <div className={classNames}>\r\n        <span onClick={onToggleLiked} className=\"app-list-item-label\">\r\n          {label}\r\n        </span>\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-star btn-sm\"\r\n            onClick={onToggleImportant}\r\n          >\r\n            <i className=\"fa fa-star\"></i>\r\n          </button>\r\n          <button type=\"button\" className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\"></i>\r\n          </button>\r\n          <i className=\"fa fa-heart\"></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;\r\n","import React from 'react';\r\nimport './post-list.css';\r\n\r\nimport PostListItem from '../post-list-item';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n  const elements = posts.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <PostListItem\r\n          {...itemProps}\r\n          onDelete={() => onDelete(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleLiked={() => onToggleLiked(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"app-list  list-group\">{elements}</ul>;\r\n};\r\n\r\nexport default PostList;\r\n","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;\r\n","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n    };\r\n\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange(e) {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onAdd(this.state.text);\r\n    this.setState({\r\n      text: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"bottom-panel d-flex\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"О чем вы думаете сейчас?\"\r\n          className=\"form-control new-post-label\"\r\n          onChange={this.onValueChange}\r\n          value={this.state.text}\r\n        />\r\n        <button type=\"submit\" className=\"btn-outline-secondary\">\r\n          Добавить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import App from './app';\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        { label: 'Todo smth', important: false, like: false, id: 1 },\r\n        { label: 'Todo smth x2', important: false, like: false, id: 2 },\r\n        {\r\n          label: 'Todo smth x3',\r\n          important: false,\r\n          like: false,\r\n          id: 3,\r\n        },\r\n      ],\r\n      term: '',\r\n      filter: 'all',\r\n    };\r\n    this.dleteItem = this.dleteItem.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.onToggleImportant = this.onToggleImportant.bind(this);\r\n    this.onToggleLiked = this.onToggleLiked.bind(this);\r\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n    this.maxId = 4;\r\n  }\r\n\r\n  dleteItem(id) {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex((elem) => elem.id === id);\r\n\r\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n      return {\r\n        data: newArr,\r\n      };\r\n    });\r\n  }\r\n\r\n  addItem(body) {\r\n    const newItem = {\r\n      label: body,\r\n      important: false,\r\n      id: this.maxId++,\r\n    };\r\n    this.setState(({ data }) => {\r\n      const newArr = [...data, newItem];\r\n      return {\r\n        data: newArr,\r\n      };\r\n    });\r\n  }\r\n\r\n  onToggleImportant(id) {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex((elem) => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = { ...old, important: !old.important };\r\n\r\n      const newArr = [\r\n        ...data.slice(0, index),\r\n        newItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      return {\r\n        data: newArr,\r\n      };\r\n    });\r\n  }\r\n\r\n  onToggleLiked(id) {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex((elem) => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = { ...old, like: !old.like };\r\n\r\n      const newArr = [\r\n        ...data.slice(0, index),\r\n        newItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      return {\r\n        data: newArr,\r\n      };\r\n    });\r\n  }\r\n\r\n  searchPost(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.indexOf(term) > -1;\r\n    });\r\n  }\r\n\r\n  filterPost(items, filter) {\r\n    if (filter === 'like') {\r\n      return items.filter((item) => item.like);\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n\r\n  onUpdateSearch(term) {\r\n    this.setState({ term });\r\n  }\r\n\r\n  onFilterSelect(filter) {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  render() {\r\n    const { data, term, filter } = this.state;\r\n\r\n    const liked = data.filter((item) => item.like).length;\r\n    const allPosts = data.length;\r\n\r\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader liked={liked} allPosts={allPosts} />\r\n        <div className=\"search-panel d-flex\">\r\n          <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n          <PostStatusFilter\r\n            filter={filter}\r\n            onFilterSelect={this.onFilterSelect}\r\n          />\r\n        </div>\r\n        <PostList\r\n          posts={visiblePosts}\r\n          onDelete={this.dleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleLiked={this.onToggleLiked}\r\n        />\r\n        <PostAddForm onAdd={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}